/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package uk.samoatesgames.spawnereditor;

import java.awt.event.WindowEvent;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import uk.samoatesgames.spawnereditor.Equiptment.Enchantment;

/**
 *
 * @author n3wton
 */
public class EquiptmentEditor extends javax.swing.JFrame {

    /**
     * Creates new form EquiptmentEditor
     */
    public EquiptmentEditor(Equiptment currentEquiptment, int defaultID) {
        initComponents();
        
        if (currentEquiptment != null)
        {
            this.m_disabledCheckbox.setSelected(false);
            enableEditor(true);
            
            this.m_id.setValue(currentEquiptment.id);
            this.m_name.setText(currentEquiptment.name);
            
            DefaultListModel model = new DefaultListModel();
            
            for (Enchantment enchant : currentEquiptment.enchantments)
            {
                model.addElement("ID: " + enchant.id + " - " + enchant.name + " (Level " + enchant.level + ")");
            }
            
            m_enchantmentList.setModel(model);
        }
        else
        {
            this.m_id.setValue(defaultID);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        m_id = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        m_name = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        m_disabledCheckbox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        m_enchantmentList = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Equiptment Editor");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "General"));
        jPanel1.setEnabled(false);

        jLabel1.setText("Id");
        jLabel1.setEnabled(false);

        m_id.setModel(new javax.swing.SpinnerNumberModel(267, 1, 2267, 1));
        m_id.setEnabled(false);

        jLabel2.setText("Custom name");
        jLabel2.setEnabled(false);

        m_name.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(m_id, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(m_name))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(m_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(m_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSaveEquiptment(evt);
            }
        });

        m_disabledCheckbox.setSelected(true);
        m_disabledCheckbox.setText("Disable Equiptment Item");
        m_disabledCheckbox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m_disabledCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onDisableEquiptmentItem(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Enchantments"));
        jPanel2.setEnabled(false);

        m_enchantmentList.setEnabled(false);
        jScrollPane1.setViewportView(m_enchantmentList);

        jButton2.setText("Add");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddEnchantment(evt);
            }
        });

        jButton3.setText("Remove");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRemoveEnchantment(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(m_disabledCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m_disabledCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onDisableEquiptmentItem(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onDisableEquiptmentItem
        
        JCheckBox checkbox = (JCheckBox) evt.getSource();
        boolean enable = !checkbox.isSelected();
        enableEditor(enable);
        
    }//GEN-LAST:event_onDisableEquiptmentItem

    private void enableEditor(boolean enableEditor)
    {
         jPanel1.setEnabled(enableEditor);
        jLabel1.setEnabled(enableEditor);
        m_id.setEnabled(enableEditor);
        jLabel2.setEnabled(enableEditor);
        m_name.setEnabled(enableEditor);
        jPanel2.setEnabled(enableEditor);
        jScrollPane1.setEnabled(enableEditor);
        m_enchantmentList.setEnabled(enableEditor);
        jButton2.setEnabled(enableEditor);
        jButton3.setEnabled(enableEditor);       
    }
    
    private void onAddEnchantment(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddEnchantment
        
        final EquiptmentEditor equiptEditor = this;
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
        
                final EnchantmentEditor editor = new EnchantmentEditor();
                
                editor.setLocationRelativeTo(equiptEditor);
                
                editor.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                        
                        DefaultListModel model = null;                        
                        if (m_enchantmentList.getModel() instanceof DefaultListModel)
                        {
                            model = (DefaultListModel)m_enchantmentList.getModel();
                        }
                        else
                        {
                           model = new DefaultListModel();
                        }
                        
                        if (editor.EnchantName != null)
                        {
                            model.addElement("ID: " + editor.EnchantID + " - " + editor.EnchantName + " (Level " + editor.EnchantLevel + ")");
                        }
                        
                        m_enchantmentList.setModel(model);
                        
                    }
                });
                
                editor.setVisible(true);
                
            }
        });
        
    }//GEN-LAST:event_onAddEnchantment

    private void onRemoveEnchantment(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRemoveEnchantment
        
        int selectedEnchantment = m_enchantmentList.getSelectedIndex();
        if (selectedEnchantment != -1) {
            DefaultListModel model = (DefaultListModel)m_enchantmentList.getModel();
            model.removeElementAt(selectedEnchantment);
            m_enchantmentList.setSelectedIndex(-1);
        }
        
    }//GEN-LAST:event_onRemoveEnchantment

    private void onSaveEquiptment(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSaveEquiptment
                        
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        
    }//GEN-LAST:event_onSaveEquiptment

    public Equiptment getEquiptment()
    {
        if (m_disabledCheckbox.isSelected())
        {
            return null;
        }
        
        Equiptment equiptment = new Equiptment((Integer)m_id.getValue(), m_name.getText());
        
        if (m_enchantmentList.getModel() instanceof DefaultListModel)
        {
            DefaultListModel model = (DefaultListModel)m_enchantmentList.getModel();
        
            for (int enchantIndex = 0; enchantIndex < model.getSize(); ++enchantIndex)
            {
                String enchant = (String)model.getElementAt(enchantIndex);

                String idBuf = enchant.substring(4, enchant.indexOf('-')).trim();
                String levelBuf = enchant.substring(enchant.indexOf('(') + 7, enchant.indexOf(')'));
                String name = enchant.substring(enchant.indexOf('-') + 1, enchant.indexOf('(')).trim();
                
                equiptment.addEnchantment(Integer.parseInt(idBuf), Integer.parseInt(levelBuf), name);
            }      
        }
        
        return equiptment;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox m_disabledCheckbox;
    private javax.swing.JList m_enchantmentList;
    private javax.swing.JSpinner m_id;
    private javax.swing.JTextField m_name;
    // End of variables declaration//GEN-END:variables
}
